<?php
// $Id$
/**
	* @file
	* A custom module
	*/
//drupal_flush_all_caches();	
/** 
 * Implement hook_menu(). 
 */ 
function cals_forms_menu() { 
	$items = array();
 
	return $items;
}	

/* ----------- The forms ------------ */
/**
 * Implements hook_form_alter().
 */
function cals_forms_form_alter(&$form, &$form_state, $form_id) {

	switch($form_id) {
	  case "legal_login":
	  case "user_register_form":
	    //printPre(array_keys($form), $form);
	    break;

	
	}

	//dpm($form_id);
	switch($form_id) {
		//overrides calsauthentication library node selector
		case "calsauthen_edit_target":
		case "calsauthen_add_target":

                        // If we are coming from the node (via a menu item), grab the current nid.
                        $nid = arg(1);
			
			$qry = db_query(
				"SELECT distinct n.nid, n.title, fa.field_address_administrative_area as prov 
				FROM 
					{node} n  inner join {field_data_field_address} fa on fa.entity_id = n.nid
				  inner join {field_data_field_target} ft on ft.entity_id = n.nid
				order by n.title, fa.field_address_administrative_area" 
			);		
			$options = array();
			
			foreach($qry as $row) {
				$options[$row->nid] = $row->title;
			}
			$form['node']['#options'] = $options;
			$form['node']['#default_value'] = $nid;
			$form['node']['#description'] = t("Only libraries tagged as a Target will be displayed in this select list");
			break;
		
		case "views_exposed_form":
    	//$form['search_api_views_fulltext_2']['#attributes'] = array('placeholder' => t('Search for author, title, description'));


			if($form['#id'] == 'views-exposed-form-cals-users-page') {
				
				//limit org field to just orgs associated with existing users.
				//this limits list to manageable number.

				$qry = db_query("SELECT distinct n.nid, n.title, fd.*, fa.field_address_administrative_area as prov 
					FROM {field_data_field_organization} fd inner join {node} n on fd.field_organization_nid = n.nid 
					  inner join {field_data_field_address} fa on fa.entity_id = n.nid
					WHERE fd.entity_type = :value
					order by fa.field_address_administrative_area, n.title", 
					array(":value" => "user")
				);
			  //build options
			  $options = array(t("All") => t("-Any-"));
			  
			  foreach($qry as $row) {
			  
			  	$options[$row->prov][$row->nid] = $row->title;
			  
			  }
			  //printAndDie($options);
			  
			  $form['field_organization_nid']['#options'] = $options;
			}

			break;

		case "post_node_form":
			global $user;
			$group = og_context($group_type = 'node', $group = NULL); //get group details

			//if simple select widget type: disable for time-being
			/*
				if(!is_numeric($form['nid']['#value']) ) {
	
				}
			
			*/
			if(isset($form['og_group_ref'][LANGUAGE_NONE]['#default_value']) && isset($group['gid']) ) 
			  $form['og_group_ref'][LANGUAGE_NONE]['#default_value'] = $group['gid'];
			
			//if multiple select widget type
			if(isset($form['og_group_ref'][LANGUAGE_NONE][0]['#default_value']) && isset($group['gid']) ) 
			  $form['og_group_ref'][LANGUAGE_NONE][0]['#default_value'] = $group['gid'];

			//disable the group_ref and visibility fields:
			//if( isset($form['og_group_ref'][LANGUAGE_NONE]) ) $form['og_group_ref'][LANGUAGE_NONE]['#disabled'] = TRUE;
			if($user->uid != 1) {
				if( isset($form['og_group_ref'][LANGUAGE_NONE]) ) $form['og_group_ref'][LANGUAGE_NONE]['#type'] = 'value';
				if( isset($form['group_content_access'][LANGUAGE_NONE]) ) $form['group_content_access'][LANGUAGE_NONE]['#type'] = 'value';
			}
			$form['#submit'][] = '_cals_forms_update_group_ref_value';
			break;
		
	}

}
/**
 * Custom submit function to re-populate og_group_ref due to issues w/ CORS file upload widget
 * overriding value.
 */
function _cals_forms_update_group_ref_value($form, &$form_state) {
	$group = og_context($group_type = 'node', $group = NULL);
	if(empty($form_state['values']['og_group_ref'][LANGUAGE_NONE][0]['target_id'])) {
    if(isset($goup['gid'])) {
    	$form_state['values']['og_group_ref'][LANGUAGE_NONE][0]['target_id'] = $group['gid'];

    }
    else if( is_numeric(arg(1)) && arg(0) == 'node' ) {
	    $node = node_load(arg(1));
	    $group = og_context($group_type = 'node', $group = $node);
	    if(!empty($group)) {
	      $form_state['values']['og_group_ref'][LANGUAGE_NONE][0]['target_id'] = $group['gid'];
	    }
	  }
	}
}
