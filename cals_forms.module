<?php
// $Id$
/**
	* @file
	* A custom module
	*/
//drupal_flush_all_caches();	
/** 
 * Implement hook_menu(). 
 */ 
function cals_forms_menu() { 
	$items = array();
 
	return $items;
}	

 

/* ----------- The forms ------------ */
/**
 * Implements hook_form_alter().
 */
function cals_forms_form_alter(&$form, &$form_state, $form_id) {
	
	switch($form_id) {
	
		case "views_exposed_form":

			if($form['#id'] == 'views-exposed-form-cals-users-page') {
				
				//limit org field to just orgs associated with existing users.
				//this limits list to manageable number.
				
				$qry = db_query("SELECT distinct n.nid, n.title, fd.* 
					FROM {field_data_field_organization} fd inner join {node} n on fd.field_organization_nid = n.nid 
					WHERE fd.entity_type = :value
					order by n.title", 
					array(":value" => "user")
				);
			  //build options
			  $options = array(t("All") => t("-Any-"));
			  
			  foreach($qry as $row)  $options[$row->nid] = $row->title;
	
			  $form['field_organization_nid']['#options'] = $options;
			}

			break;
		case "views_form_cals_users_page":
			//printAndDie($form);
			//dpm($form['field_organization']);
		
			break;
		case "post_node_formx":
			$group = og_context($group_type = 'node', $group = NULL);
			//dpm($group);
			if(!$group) {
				drupal_set_message("You need to be posting via a group", "error");
			  //drupal_access_denied("oops, need to be posting from a group");
			}
			if(!is_numeric($form['nid']['#value']) ) {
				
				//$form['og_group_ref']['und'][0]['default']['#default_value']
				//unset($form['og_group_ref']); //['#type']); // = 'value';
				$form['og_group_ref']['und']['#title'] = '';
				unset($form['og_group_ref']['und']['#prefix']);
				unset($form['og_group_ref']['und']['#suffix']);
				$form['og_group_ref']['und'][0]['default']['#default_value'] = $group['gid'];
				$form['og_group_ref']['und'][0]['default']['#type'] = 'value';
				//$form['og_group_ref']['und'][0]['admin']['#type'] = 'value';
			}
			//dpm($form['og_group_ref']['und'][0]['default']);
			break;
		
	}

}